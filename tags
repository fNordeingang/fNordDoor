!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BCM2708_PERI_BASE	wiringPi/wiringPi/wiringPi.c	135;"	d	file:
BCM_PASSWORD	wiringPi/wiringPi/wiringPi.c	98;"	d	file:
BINS	wiringPi/examples/Makefile	/^BINS	=	$(SRC:.c=)$/;"	m
BLANK	wiringPi/examples/nes.c	32;"	d	file:
BLOCK_SIZE	wiringPi/wiringPi/wiringPi.c	143;"	d	file:
BLUE	door.cpp	28;"	d	file:
BTNCLOSE	door.cpp	21;"	d	file:
BTNDOOR	door.cpp	22;"	d	file:
BTNOPEN	door.cpp	20;"	d	file:
BUTTON_PIN	wiringPi/examples/isr.c	44;"	d	file:
BUTTON_PIN	wiringPi/examples/wfi.c	47;"	d	file:
B_SIZE	wiringPi/examples/gertboard.c	36;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CC	Makefile	/^CC = gcc-4.7$/;"	m
CC	wiringPi/examples/Makefile	/^CC	= gcc$/;"	m
CC	wiringPi/gpio/Makefile	/^CC	= gcc$/;"	m
CC	wiringPi/wiringPi/Makefile	/^CC	= gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -O3 -std=c++11 $(INCLUDE) -DNOTPI $/;"	m
CFLAGS	Makefile	/^CFLAGS = -O3 -std=c++11 $(INCLUDE)$/;"	m
CFLAGS	wiringPi/examples/Makefile	/^CFLAGS	= $(DEBUG) -Wall $(INCLUDE) -Winline -pipe$/;"	m
CFLAGS	wiringPi/gpio/Makefile	/^CFLAGS	= $(DEBUG) -Wall $(INCLUDE) -Winline -pipe$/;"	m
CFLAGS	wiringPi/wiringPi/Makefile	/^CFLAGS	= $(DEBUG) -Wall $(INCLUDE) -Winline -pipe -fPIC$/;"	m
CLOCK_BASE	wiringPi/wiringPi/wiringPi.c	137;"	d	file:
CMD_READ	wiringPi/wiringPi/wiringPiFace.c	103;"	d	file:
CMD_WRITE	wiringPi/wiringPi/wiringPiFace.c	102;"	d	file:
COUNT_KEY	wiringPi/examples/wfi.c	43;"	d	file:
CXX	Makefile	/^CXX = g++$/;"	m
CXX	Makefile	/^CXX = g++-4.7$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -O3 -std=c++11 $(INCLUDE) -DNOTPI$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -O3 -std=c++11 $(INCLUDE)$/;"	m
CYCLES	wiringPi/examples/delayTest.c	32;"	d	file:
DEBOUNCE_TIME	wiringPi/examples/wfi.c	51;"	d	file:
DEBUG	wiringPi/examples/Makefile	/^DEBUG	= -O3$/;"	m
DEBUG	wiringPi/gpio/Makefile	/^DEBUG	= -O2$/;"	m
DEBUG	wiringPi/wiringPi/Makefile	/^DEBUG	= -O2$/;"	m
DEFVALA	wiringPi/wiringPi/wiringPiFace.c	66;"	d	file:
DEFVALB	wiringPi/wiringPi/wiringPiFace.c	77;"	d	file:
DESTDIR	wiringPi/wiringPi/Makefile	/^DESTDIR=\/usr$/;"	m
DO_TIMING	wiringPi/examples/gertboard.c	37;"	d	file:
DYNAMIC	wiringPi/wiringPi/Makefile	/^DYNAMIC=libwiringPi.so.$(VERSION)$/;"	m
DYN_VERS_MAJ	wiringPi/wiringPi/Makefile	/^DYN_VERS_MAJ=1$/;"	m
DYN_VERS_MIN	wiringPi/wiringPi/Makefile	/^DYN_VERS_MIN=0$/;"	m
FALSE	wiringPi/gpio/gpio.c	42;"	d	file:
FALSE	wiringPi/wiringPi/wiringPi.c	93;"	d	file:
FAST_COUNT	wiringPi/examples/speed.c	32;"	d	file:
FSEL_ALT0	wiringPi/wiringPi/wiringPi.c	123;"	d	file:
FSEL_ALT0	wiringPi/wiringPi/wiringPi.c	124;"	d	file:
FSEL_ALT1	wiringPi/wiringPi/wiringPi.c	125;"	d	file:
FSEL_ALT2	wiringPi/wiringPi/wiringPi.c	126;"	d	file:
FSEL_ALT3	wiringPi/wiringPi/wiringPi.c	127;"	d	file:
FSEL_ALT4	wiringPi/wiringPi/wiringPi.c	128;"	d	file:
FSEL_ALT5	wiringPi/wiringPi/wiringPi.c	129;"	d	file:
FSEL_INPT	wiringPi/wiringPi/wiringPi.c	121;"	d	file:
FSEL_OUTP	wiringPi/wiringPi/wiringPi.c	122;"	d	file:
GPINTENA	wiringPi/wiringPi/wiringPiFace.c	65;"	d	file:
GPINTENB	wiringPi/wiringPi/wiringPiFace.c	76;"	d	file:
GPIOA	wiringPi/wiringPi/wiringPiFace.c	71;"	d	file:
GPIOB	wiringPi/wiringPi/wiringPiFace.c	82;"	d	file:
GPIO_BASE	wiringPi/wiringPi/wiringPi.c	138;"	d	file:
GPIO_CLOCK	wiringPi/wiringPi/wiringPi.h	40;"	d
GPIO_CLOCK_SOURCE	wiringPi/wiringPi/wiringPi.c	401;"	d	file:
GPIO_PADS	wiringPi/wiringPi/wiringPi.c	136;"	d	file:
GPIO_PWM	wiringPi/wiringPi/wiringPi.c	140;"	d	file:
GPIO_TIMER	wiringPi/wiringPi/wiringPi.c	139;"	d	file:
GPPUA	wiringPi/wiringPi/wiringPiFace.c	68;"	d	file:
GPPUB	wiringPi/wiringPi/wiringPiFace.c	79;"	d	file:
GPPUD	wiringPi/wiringPi/wiringPi.c	352;"	d	file:
HIGH	wiringPi/wiringPi/wiringPi.h	43;"	d
INCLUDE	Makefile	/^INCLUDE =	-IwiringPi\/wiringPi$/;"	m
INCLUDE	Makefile	/^INCLUDE =$/;"	m
INCLUDE	wiringPi/examples/Makefile	/^INCLUDE	= -I\/usr\/local\/include$/;"	m
INCLUDE	wiringPi/gpio/Makefile	/^INCLUDE	= -I\/usr\/local\/include$/;"	m
INCLUDE	wiringPi/wiringPi/Makefile	/^INCLUDE	= -I.$/;"	m
INPUT	door.cpp	12;"	d	file:
INPUT	wiringPi/wiringPi/wiringPi.h	37;"	d
INTCAPA	wiringPi/wiringPi/wiringPiFace.c	70;"	d	file:
INTCAPB	wiringPi/wiringPi/wiringPiFace.c	81;"	d	file:
INTCONA	wiringPi/wiringPi/wiringPiFace.c	67;"	d	file:
INTCONB	wiringPi/wiringPi/wiringPiFace.c	78;"	d	file:
INTFA	wiringPi/wiringPi/wiringPiFace.c	69;"	d	file:
INTFB	wiringPi/wiringPi/wiringPiFace.c	80;"	d	file:
INT_EDGE_BOTH	wiringPi/wiringPi/wiringPi.h	61;"	d
INT_EDGE_FALLING	wiringPi/wiringPi/wiringPi.h	59;"	d
INT_EDGE_RISING	wiringPi/wiringPi/wiringPi.h	60;"	d
INT_EDGE_SETUP	wiringPi/wiringPi/wiringPi.h	58;"	d
IN_PIN	wiringPi/examples/isr-osc.c	57;"	d	file:
IOCON	wiringPi/wiringPi/wiringPiFace.c	61;"	d	file:
IOCON_BANK_MODE	wiringPi/wiringPi/wiringPiFace.c	87;"	d	file:
IOCON_DISSLW	wiringPi/wiringPi/wiringPiFace.c	90;"	d	file:
IOCON_HAEN	wiringPi/wiringPi/wiringPiFace.c	91;"	d	file:
IOCON_INIT	wiringPi/wiringPi/wiringPiFace.c	98;"	d	file:
IOCON_INTPOL	wiringPi/wiringPi/wiringPiFace.c	93;"	d	file:
IOCON_MIRROR	wiringPi/wiringPi/wiringPiFace.c	88;"	d	file:
IOCON_ODR	wiringPi/wiringPi/wiringPiFace.c	92;"	d	file:
IOCON_SEQOP	wiringPi/wiringPi/wiringPiFace.c	89;"	d	file:
IOCON_UNUSED	wiringPi/wiringPi/wiringPiFace.c	94;"	d	file:
IODIRA	wiringPi/wiringPi/wiringPiFace.c	63;"	d	file:
IODIRB	wiringPi/wiringPi/wiringPiFace.c	74;"	d	file:
IPOLA	wiringPi/wiringPi/wiringPiFace.c	64;"	d	file:
IPOLB	wiringPi/wiringPi/wiringPiFace.c	75;"	d	file:
IRC_H	irc.h	2;"	d
LCD_CDSHIFT	wiringPi/wiringPi/lcd.c	41;"	d	file:
LCD_CDSHIFT_RL	wiringPi/wiringPi/lcd.c	57;"	d	file:
LCD_CGRAM	wiringPi/wiringPi/lcd.c	43;"	d	file:
LCD_CLEAR	wiringPi/wiringPi/lcd.c	37;"	d	file:
LCD_DGRAM	wiringPi/wiringPi/lcd.c	44;"	d	file:
LCD_ENTRY	wiringPi/wiringPi/lcd.c	39;"	d	file:
LCD_ENTRY_ID	wiringPi/wiringPi/lcd.c	47;"	d	file:
LCD_ENTRY_SH	wiringPi/wiringPi/lcd.c	46;"	d	file:
LCD_FUNC	wiringPi/wiringPi/lcd.c	42;"	d	file:
LCD_FUNC_DL	wiringPi/wiringPi/lcd.c	55;"	d	file:
LCD_FUNC_F	wiringPi/wiringPi/lcd.c	53;"	d	file:
LCD_FUNC_N	wiringPi/wiringPi/lcd.c	54;"	d	file:
LCD_HOME	wiringPi/wiringPi/lcd.c	38;"	d	file:
LCD_ON_OFF	wiringPi/wiringPi/lcd.c	40;"	d	file:
LCD_ON_OFF_B	wiringPi/wiringPi/lcd.c	49;"	d	file:
LCD_ON_OFF_C	wiringPi/wiringPi/lcd.c	50;"	d	file:
LCD_ON_OFF_D	wiringPi/wiringPi/lcd.c	51;"	d	file:
LDFLAGS	wiringPi/examples/Makefile	/^LDFLAGS	= -L\/usr\/local\/lib$/;"	m
LDFLAGS	wiringPi/gpio/Makefile	/^LDFLAGS	= -L\/usr\/local\/lib$/;"	m
LDLIBS	wiringPi/examples/Makefile	/^LDLIBS    = -lwiringPi -lpthread -lm$/;"	m
LED	wiringPi/examples/blink.c	31;"	d	file:
LEDBLUE	door.cpp	25;"	d	file:
LEDRED	door.cpp	24;"	d	file:
LIBS	Makefile	/^LIBS = -lircclient -lpthread$/;"	m
LIBS	Makefile	/^LIBS = -lwiringPi -lircclient -lpthread$/;"	m
LIBS	wiringPi/gpio/Makefile	/^LIBS    = -lwiringPi -lpthread -lm$/;"	m
LIBS	wiringPi/wiringPi/Makefile	/^LIBS    =$/;"	m
LOW	wiringPi/wiringPi/wiringPi.h	42;"	d
LSBFIRST	wiringPi/wiringPi/wiringShift.h	25;"	d
MAX_LCDS	wiringPi/wiringPi/lcd.h	27;"	d
MAX_NES_JOYSTICKS	wiringPi/wiringPi/piNes.c	29;"	d	file:
MAX_NES_JOYSTICKS	wiringPi/wiringPi/piNes.h	25;"	d
MAX_PINS	wiringPi/wiringPi/softPwm.c	31;"	d	file:
MAX_PINS	wiringPi/wiringPi/softTone.c	35;"	d	file:
MAX_SERVOS	wiringPi/wiringPi/softServo.c	67;"	d	file:
MSBFIRST	wiringPi/wiringPi/wiringShift.h	26;"	d
NES_A	wiringPi/wiringPi/piNes.c	38;"	d	file:
NES_A	wiringPi/wiringPi/piNes.h	34;"	d
NES_B	wiringPi/wiringPi/piNes.c	37;"	d	file:
NES_B	wiringPi/wiringPi/piNes.h	33;"	d
NES_DOWN	wiringPi/wiringPi/piNes.c	33;"	d	file:
NES_DOWN	wiringPi/wiringPi/piNes.h	29;"	d
NES_LEFT	wiringPi/wiringPi/piNes.c	32;"	d	file:
NES_LEFT	wiringPi/wiringPi/piNes.h	28;"	d
NES_RIGHT	wiringPi/wiringPi/piNes.c	31;"	d	file:
NES_RIGHT	wiringPi/wiringPi/piNes.h	27;"	d
NES_SELECT	wiringPi/wiringPi/piNes.c	36;"	d	file:
NES_SELECT	wiringPi/wiringPi/piNes.h	32;"	d
NES_START	wiringPi/wiringPi/piNes.c	35;"	d	file:
NES_START	wiringPi/wiringPi/piNes.h	31;"	d
NES_UP	wiringPi/wiringPi/piNes.c	34;"	d	file:
NES_UP	wiringPi/wiringPi/piNes.h	30;"	d
NUM_LEDS	wiringPi/examples/pwm.c	34;"	d	file:
NUM_PINS	wiringPi/wiringPi/wiringPi.h	27;"	d
OBJ	wiringPi/examples/Makefile	/^OBJ	=	$(SRC:.c=.o)$/;"	m
OBJ	wiringPi/gpio/Makefile	/^OBJ	=	$(SRC:.c=.o)$/;"	m
OBJ	wiringPi/wiringPi/Makefile	/^OBJ	=	$(SRC:.c=.o)$/;"	m
OBJS	Makefile	/^OBJS = door.o irc.o$/;"	m
OBJ_I2C	wiringPi/wiringPi/Makefile	/^OBJ_I2C	=	$(SRC_I2C:.c=.o)$/;"	m
OFF	door.cpp	29;"	d	file:
OK_LED	wiringPi/examples/okLed.c	42;"	d	file:
OLATA	wiringPi/wiringPi/wiringPiFace.c	72;"	d	file:
OLATB	wiringPi/wiringPi/wiringPiFace.c	83;"	d	file:
OUTPUT	door.cpp	11;"	d	file:
OUTPUT	wiringPi/wiringPi/wiringPi.h	38;"	d
OUT_PIN	wiringPi/examples/isr-osc.c	56;"	d	file:
PAGE_SIZE	wiringPi/wiringPi/wiringPi.c	142;"	d	file:
PIN	wiringPi/examples/tone.c	33;"	d	file:
PI_THREAD	wiringPi/examples/wfi.c	/^PI_THREAD (waitForIt)$/;"	f
PI_THREAD	wiringPi/wiringPi/softPwm.c	/^static PI_THREAD (softPwmThread)$/;"	f	file:
PI_THREAD	wiringPi/wiringPi/softServo.c	/^static PI_THREAD (softServoThread)$/;"	f	file:
PI_THREAD	wiringPi/wiringPi/softTone.c	/^static PI_THREAD (softToneThread)$/;"	f	file:
PI_THREAD	wiringPi/wiringPi/wiringPi.h	65;"	d
PREFIX	wiringPi/wiringPi/Makefile	/^PREFIX=\/local$/;"	m
PUD_DOWN	wiringPi/wiringPi/wiringPi.h	48;"	d
PUD_OFF	wiringPi/wiringPi/wiringPi.h	47;"	d
PUD_UP	wiringPi/wiringPi/wiringPi.h	49;"	d
PULSE_TIME	wiringPi/wiringPi/piNes.c	41;"	d	file:
PULSE_TIME	wiringPi/wiringPi/softPwm.c	47;"	d	file:
PULSE_TIME	wiringPi/wiringPi/softTone.c	37;"	d	file:
PWM0_DATA	wiringPi/wiringPi/wiringPi.c	151;"	d	file:
PWM0_ENABLE	wiringPi/wiringPi/wiringPi.c	166;"	d	file:
PWM0_MS_MODE	wiringPi/wiringPi/wiringPi.c	160;"	d	file:
PWM0_OFFSTATE	wiringPi/wiringPi/wiringPi.c	163;"	d	file:
PWM0_RANGE	wiringPi/wiringPi/wiringPi.c	150;"	d	file:
PWM0_REPEATFF	wiringPi/wiringPi/wiringPi.c	164;"	d	file:
PWM0_REVPOLAR	wiringPi/wiringPi/wiringPi.c	162;"	d	file:
PWM0_SERIAL	wiringPi/wiringPi/wiringPi.c	165;"	d	file:
PWM0_USEFIFO	wiringPi/wiringPi/wiringPi.c	161;"	d	file:
PWM1_DATA	wiringPi/wiringPi/wiringPi.c	153;"	d	file:
PWM1_ENABLE	wiringPi/wiringPi/wiringPi.c	174;"	d	file:
PWM1_MS_MODE	wiringPi/wiringPi/wiringPi.c	168;"	d	file:
PWM1_OFFSTATE	wiringPi/wiringPi/wiringPi.c	171;"	d	file:
PWM1_RANGE	wiringPi/wiringPi/wiringPi.c	152;"	d	file:
PWM1_REPEATFF	wiringPi/wiringPi/wiringPi.c	172;"	d	file:
PWM1_REVPOLAR	wiringPi/wiringPi/wiringPi.c	170;"	d	file:
PWM1_SERIAL	wiringPi/wiringPi/wiringPi.c	173;"	d	file:
PWM1_USEFIFO	wiringPi/wiringPi/wiringPi.c	169;"	d	file:
PWMCLK_CNTL	wiringPi/wiringPi/wiringPi.c	157;"	d	file:
PWMCLK_DIV	wiringPi/wiringPi/wiringPi.c	158;"	d	file:
PWM_CONTROL	wiringPi/wiringPi/wiringPi.c	148;"	d	file:
PWM_MODE_BAL	wiringPi/wiringPi/wiringPi.h	54;"	d
PWM_MODE_MS	wiringPi/wiringPi/wiringPi.h	53;"	d
PWM_OUTPUT	wiringPi/wiringPi/wiringPi.h	39;"	d
PWM_STATUS	wiringPi/wiringPi/wiringPi.c	149;"	d	file:
RANGE	wiringPi/examples/pwm.c	33;"	d	file:
RED	door.cpp	27;"	d	file:
SLOW_COUNT	wiringPi/examples/speed.c	33;"	d	file:
SPI_A2D	wiringPi/wiringPi/gertboard.c	49;"	d	file:
SPI_ADC_SPEED	wiringPi/wiringPi/gertboard.c	47;"	d	file:
SPI_D2A	wiringPi/wiringPi/gertboard.c	50;"	d	file:
SPI_DAC_SPEED	wiringPi/wiringPi/gertboard.c	48;"	d	file:
SRC	wiringPi/examples/Makefile	/^SRC	=	blink.c test1.c test2.c speed.c lcd.c wfi.c isr.c isr-osc.c	\\$/;"	m
SRC	wiringPi/gpio/Makefile	/^SRC	=	gpio.c$/;"	m
SRC	wiringPi/wiringPi/Makefile	/^SRC	=	wiringPi.c wiringPiFace.c wiringSerial.c wiringShift.c	\\$/;"	m
SRC_I2C	wiringPi/wiringPi/Makefile	/^SRC_I2C	=	wiringPiI2C.c$/;"	m
STATIC	wiringPi/wiringPi/Makefile	/^STATIC=libwiringPi.a$/;"	m
TARGET	Makefile	/^TARGET =	door$/;"	m
TIMER_CONTROL	wiringPi/wiringPi/wiringPi.c	181;"	d	file:
TIMER_COUNTER	wiringPi/wiringPi/wiringPi.c	187;"	d	file:
TIMER_IRQ_CLR	wiringPi/wiringPi/wiringPi.c	182;"	d	file:
TIMER_IRQ_MASK	wiringPi/wiringPi/wiringPi.c	184;"	d	file:
TIMER_IRQ_RAW	wiringPi/wiringPi/wiringPi.c	183;"	d	file:
TIMER_LOAD	wiringPi/wiringPi/wiringPi.c	179;"	d	file:
TIMER_PRE_DIV	wiringPi/wiringPi/wiringPi.c	186;"	d	file:
TIMER_RELOAD	wiringPi/wiringPi/wiringPi.c	185;"	d	file:
TIMER_VALUE	wiringPi/wiringPi/wiringPi.c	180;"	d	file:
TRUE	wiringPi/gpio/gpio.c	41;"	d	file:
TRUE	wiringPi/wiringPi/wiringPi.c	92;"	d	file:
VERSION	wiringPi/gpio/gpio.c	45;"	d	file:
VERSION	wiringPi/wiringPi/Makefile	/^VERSION=$(DYN_VERS_MAJ).$(DYN_VERS_MIN)$/;"	m
WPI_MODE_GPIO	wiringPi/wiringPi/wiringPi.h	30;"	d
WPI_MODE_GPIO_SYS	wiringPi/wiringPi/wiringPi.h	31;"	d
WPI_MODE_PIFACE	wiringPi/wiringPi/wiringPi.h	32;"	d
WPI_MODE_PINS	wiringPi/wiringPi/wiringPi.h	29;"	d
WPI_MODE_UNINITIALISED	wiringPi/wiringPi/wiringPi.h	33;"	d
_doLoadUsage	wiringPi/gpio/gpio.c	/^static void _doLoadUsage (char *argv [])$/;"	f	file:
_wiringPiSetupPiFace	wiringPi/wiringPi/wiringPiFace.c	/^static int _wiringPiSetupPiFace (void)$/;"	f	file:
alts	wiringPi/gpio/gpio.c	/^static char *alts [] =$/;"	v	file:
bits	wiringPi/wiringPi/lcd.c	/^  uint8_t bits, rows, cols ;$/;"	m	struct:lcdDataStruct	file:
cPin	wiringPi/wiringPi/piNes.c	/^  unsigned int cPin, dPin, lPin ;$/;"	m	struct:nesPinsStruct	file:
changeOwner	wiringPi/gpio/gpio.c	/^static void changeOwner (char *cmd, char *file)$/;"	f	file:
channel	irc.cpp	/^	char    * channel;$/;"	m	struct:__anon1	file:
clk	wiringPi/wiringPi/wiringPi.c	/^static volatile uint32_t *clk ;$/;"	v	file:
closeLock	door.cpp	/^void closeLock() {$/;"	f
cols	wiringPi/wiringPi/lcd.c	/^  uint8_t bits, rows, cols ;$/;"	m	struct:lcdDataStruct	file:
connect_irc	irc.cpp	/^void connect_irc()$/;"	f
dPin	wiringPi/wiringPi/piNes.c	/^  unsigned int cPin, dPin, lPin ;$/;"	m	struct:nesPinsStruct	file:
data	wiringPi/examples/test1.c	/^uint8_t data [] =$/;"	v
dataOutRegister	wiringPi/wiringPi/wiringPiFace.c	/^uint8_t dataOutRegister = 0 ;$/;"	v
dataPins	wiringPi/wiringPi/lcd.c	/^  uint8_t dataPins [8] ;$/;"	m	struct:lcdDataStruct	file:
delay	wiringPi/wiringPi/wiringPi.c	/^void delay (unsigned int howLong)$/;"	f
delayMicroseconds	wiringPi/wiringPi/wiringPi.c	/^void delayMicroseconds (unsigned int howLong)$/;"	f
delayMicrosecondsHard	wiringPi/wiringPi/wiringPi.c	/^void delayMicrosecondsHard (unsigned int howLong)$/;"	f
digitalRead	door.cpp	/^int digitalRead(int p) { printf("digitalRead\\n"); return 1; }$/;"	f
digitalRead	wiringPi/wiringPi/wiringPi.c	/^int  (*digitalRead)       (int pin) ;$/;"	v
digitalReadGpio	wiringPi/wiringPi/wiringPi.c	/^int digitalReadGpio (int pin)$/;"	f
digitalReadPiFace	wiringPi/wiringPi/wiringPiFace.c	/^int digitalReadPiFace (int pin)$/;"	f
digitalReadSys	wiringPi/wiringPi/wiringPi.c	/^int digitalReadSys (int pin)$/;"	f
digitalReadWPi	wiringPi/wiringPi/wiringPi.c	/^int digitalReadWPi (int pin)$/;"	f
digitalWrite	door.cpp	/^void digitalWrite(int p, int v) { printf("digitalWrite\\n"); }$/;"	f
digitalWrite	wiringPi/wiringPi/wiringPi.c	/^void (*digitalWrite)      (int pin, int value) ;$/;"	v
digitalWriteByte	wiringPi/wiringPi/wiringPi.c	/^void (*digitalWriteByte)  (int value) ;$/;"	v
digitalWriteByteGpio	wiringPi/wiringPi/wiringPi.c	/^void digitalWriteByteGpio (int value)$/;"	f
digitalWriteBytePiFace	wiringPi/wiringPi/wiringPiFace.c	/^void digitalWriteBytePiFace (int value)$/;"	f
digitalWriteByteSys	wiringPi/wiringPi/wiringPi.c	/^void digitalWriteByteSys (int value)$/;"	f
digitalWriteGpio	wiringPi/wiringPi/wiringPi.c	/^void digitalWriteGpio (int pin, int value)$/;"	f
digitalWritePiFace	wiringPi/wiringPi/wiringPiFace.c	/^void digitalWritePiFace (int pin, int value)$/;"	f
digitalWritePiFaceSpecial	wiringPi/wiringPi/wiringPiFace.c	/^void digitalWritePiFaceSpecial (int pin, int value)$/;"	f
digitalWriteSys	wiringPi/wiringPi/wiringPi.c	/^void digitalWriteSys (int pin, int value)$/;"	f
digitalWriteWPi	wiringPi/wiringPi/wiringPi.c	/^void digitalWriteWPi (int pin, int value)$/;"	f
doClock	wiringPi/gpio/gpio.c	/^void doClock (int argc, char *argv [])$/;"	f
doEdge	wiringPi/gpio/gpio.c	/^void doEdge (int argc, char *argv [])$/;"	f
doExport	wiringPi/gpio/gpio.c	/^void doExport (int argc, char *argv [])$/;"	f
doExports	wiringPi/gpio/gpio.c	/^static void doExports (int argc, char *argv [])$/;"	f	file:
doGbr	wiringPi/gpio/gpio.c	/^static void doGbr (int argc, char *argv [])$/;"	f	file:
doGbw	wiringPi/gpio/gpio.c	/^static void doGbw (int argc, char *argv [])$/;"	f	file:
doLoad	wiringPi/gpio/gpio.c	/^static void doLoad (int argc, char *argv [])$/;"	f	file:
doMode	wiringPi/gpio/gpio.c	/^void doMode (int argc, char *argv [])$/;"	f
doPadDrive	wiringPi/gpio/gpio.c	/^static void doPadDrive (int argc, char *argv [])$/;"	f	file:
doPwm	wiringPi/gpio/gpio.c	/^void doPwm (int argc, char *argv [])$/;"	f
doPwmClock	wiringPi/gpio/gpio.c	/^static void doPwmClock (int argc, char *argv [])$/;"	f	file:
doPwmMode	wiringPi/gpio/gpio.c	/^static void doPwmMode (int mode)$/;"	f	file:
doPwmRange	wiringPi/gpio/gpio.c	/^static void doPwmRange (int argc, char *argv [])$/;"	f	file:
doRead	wiringPi/gpio/gpio.c	/^void doRead (int argc, char *argv []) $/;"	f
doReadall	wiringPi/gpio/gpio.c	/^static void doReadall (void)$/;"	f	file:
doUnexport	wiringPi/gpio/gpio.c	/^void doUnexport (int argc, char *argv [])$/;"	f
doUnexportall	wiringPi/gpio/gpio.c	/^void doUnexportall (int argc, char *argv [])$/;"	f
doWrite	wiringPi/gpio/gpio.c	/^static void doWrite (int argc, char *argv [])$/;"	f	file:
doWriteByte	wiringPi/gpio/gpio.c	/^static void doWriteByte (int argc, char *argv [])$/;"	f	file:
epochMicro	wiringPi/wiringPi/wiringPi.c	/^static uint64_t epochMilli, epochMicro ;$/;"	v	file:
epochMilli	wiringPi/wiringPi/wiringPi.c	/^static uint64_t epochMilli, epochMicro ;$/;"	v	file:
event_channel	irc.cpp	/^void event_channel (irc_session_t * session, const char * event, const char * origin, const char ** params, unsigned int count)$/;"	f
event_connect	irc.cpp	/^void event_connect (irc_session_t * session, const char * event, const char * origin, const char ** params, unsigned int count)$/;"	f
frewqs	wiringPi/wiringPi/softTone.c	/^static int frewqs [MAX_PINS] ;$/;"	v	file:
gertboardAnalogRead	wiringPi/wiringPi/gertboard.c	/^int gertboardAnalogRead (int chan)$/;"	f
gertboardAnalogWrite	wiringPi/wiringPi/gertboard.c	/^void gertboardAnalogWrite (int chan, int value)$/;"	f
gertboardSPISetup	wiringPi/wiringPi/gertboard.c	/^int gertboardSPISetup (void)$/;"	f
getAlt	wiringPi/wiringPi/wiringPi.c	/^int  (*getAlt)            (int pin) ;$/;"	v
getAltGpio	wiringPi/wiringPi/wiringPi.c	/^int getAltGpio (int pin)$/;"	f
getAltSys	wiringPi/wiringPi/wiringPi.c	/^int getAltSys (int pin)$/;"	f
getAltWPi	wiringPi/wiringPi/wiringPi.c	/^int getAltWPi (int pin)$/;"	f
globalCounter	wiringPi/examples/isr-osc.c	/^static volatile int globalCounter = 0 ;$/;"	v	file:
globalCounter	wiringPi/examples/isr.c	/^static volatile int globalCounter = 0 ;$/;"	v	file:
globalCounter	wiringPi/examples/wfi.c	/^static volatile int globalCounter = 0 ;$/;"	v	file:
gpio	wiringPi/wiringPi/wiringPi.c	/^static volatile uint32_t *gpio ;$/;"	v	file:
gpioClockSet	wiringPi/wiringPi/wiringPi.c	/^void (*gpioClockSet)      (int pin, int value) ;$/;"	v
gpioClockSetGpio	wiringPi/wiringPi/wiringPi.c	/^void gpioClockSetGpio (int pin, int freq)$/;"	f
gpioClockSetSys	wiringPi/wiringPi/wiringPi.c	/^void gpioClockSetSys (int pin, int freq)$/;"	f
gpioClockSetWPi	wiringPi/wiringPi/wiringPi.c	/^void gpioClockSetWPi (int pin, int freq)$/;"	f
gpioToClkCon	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToClkCon [] =$/;"	v	file:
gpioToClkDiv	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToClkDiv [] =$/;"	v	file:
gpioToEDS	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToEDS [] =$/;"	v	file:
gpioToFEN	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToFEN [] =$/;"	v	file:
gpioToGPCLR	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToGPCLR [] =$/;"	v	file:
gpioToGPFSEL	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToGPFSEL [] =$/;"	v	file:
gpioToGPLEV	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToGPLEV [] =$/;"	v	file:
gpioToGPSET	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToGPSET [] =$/;"	v	file:
gpioToGpClkALT0	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToGpClkALT0 [] =$/;"	v	file:
gpioToPUDCLK	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToPUDCLK [] =$/;"	v	file:
gpioToPwmALT	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToPwmALT [] =$/;"	v	file:
gpioToPwmPort	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToPwmPort [] =$/;"	v	file:
gpioToREN	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToREN [] =$/;"	v	file:
gpioToShift	wiringPi/wiringPi/wiringPi.c	/^static uint8_t gpioToShift [] =$/;"	v	file:
init	door.cpp	/^void init() {$/;"	f
initLock	door.cpp	/^void initLock() {$/;"	f
initPins	door.cpp	/^void initPins() {$/;"	f
initialiseEpoch	wiringPi/wiringPi/wiringPi.c	/^static void initialiseEpoch (void)$/;"	f	file:
insolents	irc.cpp	/^	std::map <std::string, unsigned int> insolents;$/;"	m	struct:__anon1	file:
interruptHandler	wiringPi/wiringPi/wiringPi.c	/^static void *interruptHandler (void *arg)$/;"	f	file:
irc_ctx_t	irc.cpp	/^} irc_ctx_t;$/;"	t	typeref:struct:__anon1	file:
isClosePressed	door.cpp	/^int isClosePressed() {$/;"	f
isDoorClosed	door.cpp	/^int isDoorClosed() {$/;"	f
isOpenPressed	door.cpp	/^int isOpenPressed() {$/;"	f
isrFunctions	wiringPi/wiringPi/wiringPi.c	/^static void (*isrFunctions [64])(void) ;$/;"	v	file:
joysticks	wiringPi/wiringPi/piNes.c	/^static int joysticks = 0 ;$/;"	v	file:
lPin	wiringPi/wiringPi/piNes.c	/^  unsigned int cPin, dPin, lPin ;$/;"	m	struct:nesPinsStruct	file:
lcdClear	wiringPi/wiringPi/lcd.c	/^void lcdClear (int fd)$/;"	f
lcdDataStruct	wiringPi/wiringPi/lcd.c	/^struct lcdDataStruct$/;"	s	file:
lcdHome	wiringPi/wiringPi/lcd.c	/^void lcdHome (int fd)$/;"	f
lcdInit	wiringPi/wiringPi/lcd.c	/^int lcdInit (int rows, int cols, int bits, int rs, int strb,$/;"	f
lcdPosition	wiringPi/wiringPi/lcd.c	/^void lcdPosition (int fd, int x, int y)$/;"	f
lcdPrintf	wiringPi/wiringPi/lcd.c	/^void lcdPrintf (int fd, char *message, ...)$/;"	f
lcdPutchar	wiringPi/wiringPi/lcd.c	/^void lcdPutchar (int fd, uint8_t data)$/;"	f
lcdPuts	wiringPi/wiringPi/lcd.c	/^void lcdPuts (int fd, char *string)$/;"	f
lcdSendCommand	wiringPi/wiringPi/lcd.c	/^void lcdSendCommand (int fd, uint8_t command)$/;"	f
lcds	wiringPi/wiringPi/lcd.c	/^struct lcdDataStruct *lcds [MAX_LCDS] ;$/;"	v	typeref:struct:lcdDataStruct
ledMap	wiringPi/examples/pwm.c	/^int ledMap [NUM_LEDS] = { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13 } ;$/;"	v
main	door.cpp	/^int main (void)$/;"	f
main	wiringPi/examples/blink.c	/^int main (void)$/;"	f
main	wiringPi/examples/delayTest.c	/^int main()$/;"	f
main	wiringPi/examples/gertboard.c	/^int main (void)$/;"	f
main	wiringPi/examples/isr-osc.c	/^int main (void)$/;"	f
main	wiringPi/examples/isr.c	/^int main (void)$/;"	f
main	wiringPi/examples/lcd.c	/^int main (void)$/;"	f
main	wiringPi/examples/nes.c	/^int main ()$/;"	f
main	wiringPi/examples/okLed.c	/^int main ()$/;"	f
main	wiringPi/examples/piface.c	/^int main (void)$/;"	f
main	wiringPi/examples/pwm.c	/^int main ()$/;"	f
main	wiringPi/examples/serialRead.c	/^int main ()$/;"	f
main	wiringPi/examples/serialTest.c	/^int main ()$/;"	f
main	wiringPi/examples/servo.c	/^int main ()$/;"	f
main	wiringPi/examples/speed.c	/^int main (void)$/;"	f
main	wiringPi/examples/test1.c	/^int main (void)$/;"	f
main	wiringPi/examples/test2.c	/^int main (void)$/;"	f
main	wiringPi/examples/tone.c	/^int main ()$/;"	f
main	wiringPi/examples/wfi.c	/^int main (void)$/;"	f
main	wiringPi/gpio/gpio.c	/^int main (int argc, char *argv [])$/;"	f
marks	wiringPi/wiringPi/softPwm.c	/^static int marks [MAX_PINS] ;$/;"	v	file:
micros	wiringPi/wiringPi/wiringPi.c	/^unsigned int micros (void)$/;"	f
millis	wiringPi/wiringPi/wiringPi.c	/^unsigned int millis (void)$/;"	f
moduleLoaded	wiringPi/gpio/gpio.c	/^static int moduleLoaded (char *modName)$/;"	f	file:
myInterrupt	wiringPi/examples/isr-osc.c	/^void myInterrupt (void)$/;"	f
myInterrupt	wiringPi/examples/isr.c	/^void myInterrupt (void)$/;"	f
nesPins	wiringPi/wiringPi/piNes.c	/^static struct nesPinsStruct nesPins [MAX_NES_JOYSTICKS] ;$/;"	v	typeref:struct:nesPinsStruct	file:
nesPinsStruct	wiringPi/wiringPi/piNes.c	/^struct nesPinsStruct$/;"	s	file:
newPin	wiringPi/wiringPi/softPwm.c	/^int newPin = -1 ;$/;"	v
newPin	wiringPi/wiringPi/softTone.c	/^static int newPin = -1 ;$/;"	v	file:
nick	irc.cpp	/^	char    * nick;$/;"	m	struct:__anon1	file:
openLock	door.cpp	/^void openLock() {$/;"	f
outputs	wiringPi/examples/piface.c	/^int outputs [4] = { 0,0,0,0 } ;$/;"	v
pads	wiringPi/wiringPi/wiringPi.c	/^static volatile uint32_t *pads ;$/;"	v	file:
piBoardRev	wiringPi/wiringPi/wiringPi.c	/^int piBoardRev (void)$/;"	f
piBoardRevOops	wiringPi/wiringPi/wiringPi.c	/^static void piBoardRevOops (char *why)$/;"	f	file:
piHiPri	wiringPi/wiringPi/piHiPri.c	/^int piHiPri (int pri)$/;"	f
piLock	wiringPi/wiringPi/piThread.c	/^void piLock (int key)$/;"	f
piMutexes	wiringPi/wiringPi/piThread.c	/^static pthread_mutex_t piMutexes [4] ;$/;"	v	file:
piThreadCreate	wiringPi/wiringPi/piThread.c	/^int piThreadCreate (void *(*fn)(void *))$/;"	f
piUnlock	wiringPi/wiringPi/piThread.c	/^void piUnlock (int key)$/;"	f
pinEnableED01Pi	wiringPi/wiringPi/wiringPi.c	/^void pinEnableED01Pi (int pin)$/;"	f
pinMap	wiringPi/wiringPi/softServo.c	/^static int pinMap     [MAX_SERVOS] ;	\/\/ Keep track of our pins$/;"	v	file:
pinMode	door.cpp	/^void pinMode(int p, int m) { printf("pinMode\\n"); }$/;"	f
pinMode	wiringPi/wiringPi/wiringPi.c	/^void (*pinMode)           (int pin, int mode) ;$/;"	v
pinModeGpio	wiringPi/wiringPi/wiringPi.c	/^void pinModeGpio (int pin, int mode)$/;"	f
pinModePiFace	wiringPi/wiringPi/wiringPiFace.c	/^void pinModePiFace          (int pin, int mode)  {}$/;"	f
pinModeSys	wiringPi/wiringPi/wiringPi.c	/^void pinModeSys (int pin, int mode)$/;"	f
pinModeWPi	wiringPi/wiringPi/wiringPi.c	/^void pinModeWPi (int pin, int mode)$/;"	f
pinNames	wiringPi/gpio/gpio.c	/^static char *pinNames [] =$/;"	v	file:
pinToGpio	wiringPi/wiringPi/wiringPi.c	/^static int *pinToGpio ;$/;"	v	file:
pinToGpioR1	wiringPi/wiringPi/wiringPi.c	/^static int pinToGpioR1 [64] =$/;"	v	file:
pinToGpioR2	wiringPi/wiringPi/wiringPi.c	/^static int pinToGpioR2 [64] =$/;"	v	file:
pressButton	door.cpp	/^void pressButton(int btn) {$/;"	f
pudRegister	wiringPi/wiringPi/wiringPiFace.c	/^uint8_t     pudRegister = 0 ;$/;"	v
pullUpDnControl	wiringPi/wiringPi/wiringPi.c	/^void (*pullUpDnControl)   (int pin, int pud) ;$/;"	v
pullUpDnControlGpio	wiringPi/wiringPi/wiringPi.c	/^void pullUpDnControlGpio (int pin, int pud)$/;"	f
pullUpDnControlPiFace	wiringPi/wiringPi/wiringPiFace.c	/^void pullUpDnControlPiFace (int pin, int pud)$/;"	f
pullUpDnControlPiFaceSpecial	wiringPi/wiringPi/wiringPiFace.c	/^void pullUpDnControlPiFaceSpecial (int pin, int pud)$/;"	f
pullUpDnControlSys	wiringPi/wiringPi/wiringPi.c	/^void pullUpDnControlSys (int pin, int pud)$/;"	f
pullUpDnControlWPi	wiringPi/wiringPi/wiringPi.c	/^void pullUpDnControlWPi (int pin, int pud)$/;"	f
pulseWidth	wiringPi/wiringPi/softServo.c	/^static int pulseWidth [MAX_SERVOS] ;	\/\/ microseconds$/;"	v	file:
put4Command	wiringPi/wiringPi/lcd.c	/^static void put4Command (struct lcdDataStruct *lcd, uint8_t command)$/;"	f	file:
putCommand	wiringPi/wiringPi/lcd.c	/^static void putCommand (struct lcdDataStruct *lcd, uint8_t command)$/;"	f	file:
pwm	wiringPi/wiringPi/wiringPi.c	/^static volatile uint32_t *pwm ;$/;"	v	file:
pwmSetClock	wiringPi/wiringPi/wiringPi.c	/^void (*pwmSetClock)       (int divisor) ;$/;"	v
pwmSetClockSys	wiringPi/wiringPi/wiringPi.c	/^void pwmSetClockSys (int divisor)$/;"	f
pwmSetClockWPi	wiringPi/wiringPi/wiringPi.c	/^void pwmSetClockWPi (int divisor)$/;"	f
pwmSetMode	wiringPi/wiringPi/wiringPi.c	/^void (*pwmSetMode)        (int mode) ;$/;"	v
pwmSetModeSys	wiringPi/wiringPi/wiringPi.c	/^void pwmSetModeSys (int mode)$/;"	f
pwmSetModeWPi	wiringPi/wiringPi/wiringPi.c	/^void pwmSetModeWPi (int mode)$/;"	f
pwmSetRange	wiringPi/wiringPi/wiringPi.c	/^void (*pwmSetRange)       (unsigned int range) ;$/;"	v
pwmSetRangeSys	wiringPi/wiringPi/wiringPi.c	/^void pwmSetRangeSys (unsigned int range)$/;"	f
pwmSetRangeWPi	wiringPi/wiringPi/wiringPi.c	/^void pwmSetRangeWPi (unsigned int range)$/;"	f
pwmWrite	wiringPi/wiringPi/wiringPi.c	/^void (*pwmWrite)          (int pin, int value) ;$/;"	v
pwmWriteGpio	wiringPi/wiringPi/wiringPi.c	/^void pwmWriteGpio (int pin, int value)$/;"	f
pwmWritePiFace	wiringPi/wiringPi/wiringPiFace.c	/^void pwmWritePiFace         (int pin, int value) {}$/;"	f
pwmWriteSys	wiringPi/wiringPi/wiringPi.c	/^void pwmWriteSys (int pin, int value)$/;"	f
pwmWriteWPi	wiringPi/wiringPi/wiringPi.c	/^void pwmWriteWPi (int pin, int value)$/;"	f
range	wiringPi/wiringPi/softPwm.c	/^static int range [MAX_PINS] ;$/;"	v	file:
readByte	wiringPi/wiringPi/wiringPiFace.c	/^static uint8_t readByte (uint8_t reg)$/;"	f	file:
readNesJoystick	wiringPi/wiringPi/piNes.c	/^unsigned int readNesJoystick (int joystick)$/;"	f
rows	wiringPi/wiringPi/lcd.c	/^  uint8_t bits, rows, cols ;$/;"	m	struct:lcdDataStruct	file:
rsPin	wiringPi/wiringPi/lcd.c	/^  uint8_t rsPin, strbPin ;$/;"	m	struct:lcdDataStruct	file:
scale	wiringPi/examples/tone.c	/^int scale [8] = { 262, 294, 330, 349, 392, 440, 494, 525 } ;$/;"	v
scanButton	wiringPi/examples/piface.c	/^void scanButton (int button)$/;"	f
sendDataCmd	wiringPi/wiringPi/lcd.c	/^static void sendDataCmd (struct lcdDataStruct *lcd, uint8_t data)$/;"	f	file:
serialClose	wiringPi/wiringPi/wiringSerial.c	/^void serialClose (int fd)$/;"	f
serialDataAvail	wiringPi/wiringPi/wiringSerial.c	/^int serialDataAvail (int fd)$/;"	f
serialFlush	wiringPi/wiringPi/wiringSerial.c	/^void serialFlush (int fd)$/;"	f
serialGetchar	wiringPi/wiringPi/wiringSerial.c	/^int serialGetchar (int fd)$/;"	f
serialOpen	wiringPi/wiringPi/wiringSerial.c	/^int serialOpen (char *device, int baud)$/;"	f
serialPrintf	wiringPi/wiringPi/wiringSerial.c	/^void serialPrintf (int fd, char *message, ...)$/;"	f
serialPutchar	wiringPi/wiringPi/wiringSerial.c	/^void serialPutchar (int fd, unsigned char c)$/;"	f
serialPuts	wiringPi/wiringPi/wiringSerial.c	/^void serialPuts (int fd, char *s)$/;"	f
setButtonMode	door.cpp	/^void setButtonMode(int mode) {$/;"	f
setLED	door.cpp	/^void setLED(int mode) {$/;"	f
setPadDrive	wiringPi/wiringPi/wiringPi.c	/^void (*setPadDrive)       (int group, int value) ;$/;"	v
setPadDriveGpio	wiringPi/wiringPi/wiringPi.c	/^void setPadDriveGpio (int group, int value)$/;"	f
setPadDriveSys	wiringPi/wiringPi/wiringPi.c	/^void setPadDriveSys (int group, int value)$/;"	f
setPadDriveWPi	wiringPi/wiringPi/wiringPi.c	/^void setPadDriveWPi (int group, int value)$/;"	f
setup	wiringPi/examples/wfi.c	/^void setup (void)$/;"	f
setupNesJoystick	wiringPi/wiringPi/piNes.c	/^int setupNesJoystick (int dPin, int cPin, int lPin)$/;"	f
shiftIn	wiringPi/wiringPi/wiringShift.c	/^uint8_t shiftIn (uint8_t dPin, uint8_t cPin, uint8_t order)$/;"	f
shiftOut	wiringPi/wiringPi/wiringShift.c	/^void shiftOut (uint8_t dPin, uint8_t cPin, uint8_t order, uint8_t val)$/;"	f
signalHandler	door.cpp	/^void signalHandler(int sig) {$/;"	f
softPwmCreate	wiringPi/wiringPi/softPwm.c	/^int softPwmCreate (int pin, int initialValue, int pwmRange)$/;"	f
softPwmWrite	wiringPi/wiringPi/softPwm.c	/^void softPwmWrite (int pin, int value)$/;"	f
softServoSetup	wiringPi/wiringPi/softServo.c	/^int softServoSetup (int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7)$/;"	f
softServoWrite	wiringPi/wiringPi/softServo.c	/^void softServoWrite (int servoPin, int value)$/;"	f
softToneCreate	wiringPi/wiringPi/softTone.c	/^int softToneCreate (int pin)$/;"	f
softToneWrite	wiringPi/wiringPi/softTone.c	/^void softToneWrite (int pin, int frewq)$/;"	f
spiBPW	wiringPi/wiringPi/wiringPiFace.c	/^static uint8_t     spiBPW    = 8 ;$/;"	v	file:
spiBPW	wiringPi/wiringPi/wiringPiSPI.c	/^static uint8_t     spiBPW    = 8 ;$/;"	v	file:
spiDelay	wiringPi/wiringPi/wiringPiFace.c	/^static uint16_t    spiDelay  = 0;$/;"	v	file:
spiDelay	wiringPi/wiringPi/wiringPiSPI.c	/^static uint16_t    spiDelay  = 0;$/;"	v	file:
spiDev0	wiringPi/wiringPi/wiringPiSPI.c	/^static char       *spiDev0 = "\/dev\/spidev0.0" ;$/;"	v	file:
spiDev1	wiringPi/wiringPi/wiringPiSPI.c	/^static char       *spiDev1 = "\/dev\/spidev0.1" ;$/;"	v	file:
spiDevice	wiringPi/wiringPi/wiringPiFace.c	/^static char       *spiDevice = "\/dev\/spidev0.0" ;$/;"	v	file:
spiFd	wiringPi/wiringPi/wiringPiFace.c	/^static int spiFd ;$/;"	v	file:
spiFds	wiringPi/wiringPi/wiringPiSPI.c	/^static int         spiFds [2] ;$/;"	v	file:
spiMode	wiringPi/wiringPi/wiringPiFace.c	/^static uint8_t     spiMode   = 0 ;$/;"	v	file:
spiMode	wiringPi/wiringPi/wiringPiSPI.c	/^static uint8_t     spiMode   = 0 ;$/;"	v	file:
spiSpeed	wiringPi/wiringPi/wiringPiFace.c	/^static uint32_t    spiSpeed  = 5000000 ;$/;"	v	file:
spiSpeeds	wiringPi/wiringPi/wiringPiSPI.c	/^static uint32_t    spiSpeeds [2] ;$/;"	v	file:
strbPin	wiringPi/wiringPi/lcd.c	/^  uint8_t rsPin, strbPin ;$/;"	m	struct:lcdDataStruct	file:
strobe	wiringPi/wiringPi/lcd.c	/^static void strobe (struct lcdDataStruct *lcd)$/;"	f	file:
sysFds	wiringPi/wiringPi/wiringPi.c	/^static int sysFds [64] ;$/;"	v	file:
timer	wiringPi/wiringPi/wiringPi.c	/^static volatile uint32_t *timer ;$/;"	v	file:
timerIrqRaw	wiringPi/wiringPi/wiringPi.c	/^static volatile uint32_t *timerIrqRaw ;$/;"	v	file:
usage	wiringPi/gpio/gpio.c	/^char *usage = "Usage: gpio -v\\n"$/;"	v
values	wiringPi/examples/pwm.c	/^int values [NUM_LEDS] = { 0, 17, 32, 50, 67, 85, 100, 85, 67, 50, 32, 17 } ;$/;"	v
waitForInterrupt	wiringPi/wiringPi/wiringPi.c	/^int  (*waitForInterrupt)  (int pin, int mS) ;$/;"	v
waitForInterruptGpio	wiringPi/wiringPi/wiringPi.c	/^int waitForInterruptGpio (int pin, int mS)$/;"	f
waitForInterruptPiFace	wiringPi/wiringPi/wiringPiFace.c	/^int  waitForInterruptPiFace (int pin, int mS)    { return 0 ; }$/;"	f
waitForInterruptSys	wiringPi/wiringPi/wiringPi.c	/^int waitForInterruptSys (int pin, int mS)$/;"	f
waitForInterruptWPi	wiringPi/wiringPi/wiringPi.c	/^int waitForInterruptWPi (int pin, int mS)$/;"	f
wiringPiDebug	wiringPi/wiringPi/wiringPi.c	/^int wiringPiDebug = FALSE ;$/;"	v
wiringPiI2CRead	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CRead (int fd)$/;"	f
wiringPiI2CReadReg16	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CReadReg16 (int fd, int reg)$/;"	f
wiringPiI2CReadReg8	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CReadReg8 (int fd, int reg)$/;"	f
wiringPiI2CSetup	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CSetup (int devId)$/;"	f
wiringPiI2CWrite	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CWrite (int fd, int data)$/;"	f
wiringPiI2CWriteReg16	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CWriteReg16 (int fd, int reg, int data)$/;"	f
wiringPiI2CWriteReg8	wiringPi/wiringPi/wiringPiI2C.c	/^int wiringPiI2CWriteReg8 (int fd, int reg, int data)$/;"	f
wiringPiISR	wiringPi/wiringPi/wiringPi.c	/^int wiringPiISR (int pin, int mode, void (*function)(void))$/;"	f
wiringPiMode	wiringPi/wiringPi/wiringPi.c	/^static int wiringPiMode = WPI_MODE_UNINITIALISED ;$/;"	v	file:
wiringPiSPIDataRW	wiringPi/wiringPi/wiringPiSPI.c	/^int wiringPiSPIDataRW (int channel, unsigned char *data, int len)$/;"	f
wiringPiSPIGetFd	wiringPi/wiringPi/wiringPiSPI.c	/^int wiringPiSPIGetFd (int channel)$/;"	f
wiringPiSPISetup	wiringPi/wiringPi/wiringPiSPI.c	/^int wiringPiSPISetup (int channel, int speed)$/;"	f
wiringPiSetup	door.cpp	/^int wiringPiSetup() { return 0; }$/;"	f
wiringPiSetup	wiringPi/wiringPi/wiringPi.c	/^int wiringPiSetup (void)$/;"	f
wiringPiSetupGpio	wiringPi/wiringPi/wiringPi.c	/^int wiringPiSetupGpio (void)$/;"	f
wiringPiSetupPiFace	wiringPi/wiringPi/wiringPiFace.c	/^int wiringPiSetupPiFace (void)$/;"	f
wiringPiSetupPiFaceForGpioProg	wiringPi/wiringPi/wiringPiFace.c	/^int wiringPiSetupPiFaceForGpioProg (void)$/;"	f
wiringPiSetupSys	wiringPi/wiringPi/wiringPi.c	/^int wiringPiSetupSys (void)$/;"	f
wpMode	wiringPi/gpio/gpio.c	/^static int wpMode ;$/;"	v	file:
wpiPinToGpio	wiringPi/wiringPi/wiringPi.c	/^int wpiPinToGpio (int wpiPin)$/;"	f
writeByte	wiringPi/wiringPi/wiringPiFace.c	/^static void writeByte (uint8_t reg, uint8_t data)$/;"	f	file:
